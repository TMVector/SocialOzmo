{"version":3,"sources":["..\\pusher.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B6B;AAAA;;AAAA;AAAA;AAAA;AAAgB;;;;6BACV;AAAA;AAAI;;;6BACE;AAAA;AAAG;;;6BACE;AAAA;AAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMxB;AAAA;AAAA;;;;6BACoB;AAAA;AAAQ,a;8BAA2B;AAAA;AAAQ;;;6BAC5C;AAAA;AAAQ,a;8BAA6B;AAAA;AAAQ;;;6BACpD;AAAA;AAAQ,a;8BAAyB;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;;;;AAErD;AAAA;AAAA;;;;+BAIK;AAAA;AAAQ;;;kCACK;AAAA;AAAQ;;;+BAClB;AAAA;AAAQ;;;sCACmB;AAAA;AAAQ;;;2CACE;AAAA;AAAQ;;;yCACZ;AAAA;AAAQ;;;kCACnC;AAAA;AAAQ;;;6BATP;AAAA;AAAQ,a;8BAA0B;AAAA;AAAQ;;;6BACpC;AAAA;AAAQ,a;8BAA0B;AAAA;AAAQ;;;6BACrC;AAAA;AAAQ,a;8BAA2B;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;;;AAerE;AAAA;AAAA;;;;sCAGsC;AAAA;AAAQ;;;yCACK;AAAA;AAAQ;;;+CACA;AAAA;AAAQ;;;6BAJjD;AAAA;AAAQ,a;8BAA4B;AAAA;AAAQ;;;6BACxC;AAAA;AAAQ,a;8BAAyB;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;AAQ/D;AAAA;AAAA;;;;+BAEwB;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;;;AAGhC;AAAA;AAAA;;;;+BAEwB;AAAA;AAAQ;;;6BACV;AAAA;AAAQ,a;8BAA4B;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;;;;;AAKlE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAoB;;;;6BACA;AAAA;AAAW;;;6BACR;AAAA;AAAM;;;6BACL;AAAA;AAAM;;;6BACL;AAAA;AAAO;;;;;;;;;;;;;;;;;;;;;;;AAEhC;AAAA;;AAAA;AAAA;AAAe;;;;6BACA;AAAA;AAAM;;;6BACR;AAAA;AAAK;;;;;;;;;;;;;;;;;;;;;;;AAElB;AAAA;AAAA;;;;sCAG8C;AAAA;AAAQ;;;sCAClB;AAAA;AAAQ;;;mCAChB;AAAA;AAAQ;;;6BAJzB;AAAA;AAAQ,a;8BAAyB;AAAA;AAAQ;;;6BACjC;AAAA;AAAQ,a;8BAA4B;AAAA;AAAQ;;;;;;;;;;;;;;;;;;;;;;;;;AAKpF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAU;;;;6BACmB;AAAA;AAAK;;;6BACI;AAAA;AAAO;;;6BACD;AAAA;AAAU;;;6BACd;AAAA;AAAM;;;6BACT;AAAA;AAAS;;;;;;;;;;;;;;;;;;;;;;;;AAEzB;AAAA;AAAA;;;;sCAI2C;AAAA;AAAQ;;;sCACT;AAAA;AAAQ;;;mCAC3B;AAAA;AAAQ;;;2CACF;AAAA;AAAQ;;;6BANhB;AAAA;AAAQ,a;8BAAgC;AAAA;AAAQ;;;6BACrD;AAAA;AAAQ,a;8BAA4B;AAAA;AAAQ;;;6BACnC;AAAA;AAAQ,a;8BAAgC;AAAA;AAAQ","file":"pusher.js","sourcesContent":["// Typing file for F#-JS interop with the Pusher Platform API.\n// Initially generated with ts2fable.\n\r\nnamespace G\nopen System\nopen Fable.Core\nopen Fable.Import.JS\nopen Fable.Import.Browser\n\n//[<Erase>]\n[<Import(\"*\", \"pusher-platform-js\")>]\nmodule PusherPlatform =\r\n\n    type Headers =\n        obj // NOTE this is actually a string->string map?\n\n    and [<AllowNullLiteral>] Event =\n        abstract eventId: string with get, set\n        abstract headers: Headers with get, set\n        abstract body: obj with get, set\n\n    and [<AllowNullLiteral>] RequestOptions =\n        abstract ``method``: string with get, set\n        abstract path: string with get, set\n        abstract jwt: string option with get, set\n        abstract headers: Headers option with get, set\n        abstract body: obj option with get, set\n\n    and [<AllowNullLiteral>] SubscribeOptions(path, ?jwt, ?headers) =\n        member this.path: string = path\n        member this.jwt: string option = jwt\n        member this.headers: Headers option = headers\n        member this.onOpen: Func<unit, unit> option = None // TODO add addEventHandler_... methods here?\n        member this.onEvent: Func<Event, unit> option = None\n        member this.onEnd: Func<unit, unit> option = None\n        member this.onError: Func<Error, unit> option = None\n\n    and [<AllowNullLiteral>] ErrorResponse(xhr: XMLHttpRequest) =\n        member __.statusCode with get(): float = jsNative and set(v: float): unit = jsNative\n        member __.headers with get(): Headers = jsNative and set(v: Headers): unit = jsNative\n        member __.info with get(): obj = jsNative and set(v: obj): unit = jsNative\n\n    and [<AllowNullLiteral>] Subscription(xhr: XMLHttpRequest, options: SubscribeOptions) =\n        member __.gotEOS with get(): bool = jsNative and set(v: bool): unit = jsNative\n        member __.calledOnOpen with get(): bool = jsNative and set(v: bool): unit = jsNative\n        member __.lastNewlineIndex with get(): float = jsNative and set(v: float): unit = jsNative\n        member __.opened(): obj = jsNative\n        member __.``open``(jwt: string): obj = jsNative\n        member __.onChunk(): Error = jsNative\n        member __.onMessage(message: ResizeArray<obj>): Error = jsNative // FIXME isn't a lot of this private? Perhaps go through the whole file?\n        member __.onEventMessage(eventMessage: ResizeArray<obj>): Error = jsNative\n        member __.onEOSMessage(eosMessage: ResizeArray<obj>): Error = jsNative\n        member __.abort(err: Error): obj = jsNative\n\n    and [<AllowNullLiteral>] BaseClientOptions =\n        abstract cluster: string with get, set\n        abstract encrypted: bool option with get, set\n        abstract timeout: float option with get, set\n        abstract XMLHttpRequest: Function option with get, set\n\n    and [<AllowNullLiteral>] BaseClient(options: BaseClientOptions) =\n        member __.baseURL with get(): string = jsNative and set(v: string): unit = jsNative\n        member __.XMLHttpRequest with get(): obj = jsNative and set(v: obj): unit = jsNative\n        member __.request(options: RequestOptions): Promise<obj> = jsNative\n        member __.newSubscription(subOptions: SubscribeOptions): Subscription = jsNative\n        member __.createXHR(baseURL: string, options: RequestOptions): XMLHttpRequest = jsNative\n\n    and [<AllowNullLiteral>] Authorizer =\n        abstract authorize: unit -> Promise<string>\n\n    and [<AllowNullLiteral>] SimpleTokenAuthorizer(jwt: string) =\n        interface Authorizer with\n            member __.authorize(): Promise<string> = jsNative\n\n\n    and [<AllowNullLiteral>] AuthServerAuthorizer(authServerUrl: string) =\n        interface Authorizer with\n            member __.authorize(): Promise<string> = jsNative\n        member __.accessToken with get(): string = jsNative and set(v: string): unit = jsNative\n\n    and Response =\n        obj\n\n    and [<AllowNullLiteral>] FeedSubscribeOptions(?lastEventId, ?onOpen, ?onItem, ?onError) =\n        member this.lastEventId: string option = lastEventId\n        member this.onOpen: (unit -> unit) option = onOpen\n        member this.onItem: (Event -> unit) option = onItem\n        member this.onError: (Error -> unit) option = onError\n\n    and [<AllowNullLiteral>] FeedsGetOptions(?fromId, ?limit) =\n        member this.fromId: string option = fromId\n        member this.limit: float option = limit\n\n    and [<AllowNullLiteral>] FeedsHelper(name: string, app: App) =\n        member __.app with get(): App = jsNative and set(v: App): unit = jsNative\n        member __.feedName with get(): string = jsNative and set(v: string): unit = jsNative\n        member __.subscribe(options: FeedSubscribeOptions): Subscription = jsNative\n        member __.get(?options: FeedsGetOptions): Promise<obj> = jsNative\n        member __.append(item: obj): Promise<Response> = jsNative\n\n    and AppOptions(appId, ?cluster, ?authorizer, ?client, ?encrypted) =\n        member this.appId : string = appId\n        member this.cluster : string option = cluster\n        member this.authorizer: Authorizer option = authorizer\n        member this.client: BaseClient option = client\n        member this.encrypted: bool option = encrypted\n\n    and [<AllowNullLiteral>] App(options: AppOptions) =\n        member __.client with get(): BaseClient = jsNative and set(v: BaseClient): unit = jsNative\n        member __.appId with get(): string = jsNative and set(v: string): unit = jsNative\n        member __.authorizer with get(): Authorizer = jsNative and set(v: Authorizer): unit = jsNative\n        member __.request(options: RequestOptions): Promise<Response> = jsNative\n        member __.subscribe(options: SubscribeOptions): Subscription = jsNative\n        member __.feed(name: string): FeedsHelper = jsNative\n        member __.absPath(relativePath: string): string = jsNative\n\n\n"]}